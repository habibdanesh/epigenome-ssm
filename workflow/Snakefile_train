import os

### config parameters
root_path = config["root_path"]
in_dir = config["in_dir"]
model_type = config["model_type"]
n_features = config["n_features"]
out_dir = config["out_dir"]
debug = config["debug"]

### paths
scripts_dir = root_path + "/workflow/scripts"
training_dir = out_dir + "/training"

### track and file names
in_files_locator = in_dir + "/file_locator.tsv"
epigenomes = []
assays = []
tracks = []
track_in_files = []
with open(in_files_locator, 'r') as in_f_locator:
    for line in in_f_locator.readlines():
        columns = line.strip("\n").split("\t")
        epigenome = columns[0]
        assay = columns[1]
        path = columns[2]
        if epigenome not in epigenomes:
            epigenomes.append(epigenome)
        if assay not in assays:
            assays.append(assay)
        track = "{}_{}".format(epigenome, assay)
        tracks.append(track)
        track_in_files.append(path)
model_json = training_dir + "/model.json"


### rules
rule all:
    input:
        ## run_training
        model_json


rule run_training:
    input:
        in_files = track_in_files
    params:
        epigenomes = epigenomes,
        assays = assays,
        tracks = tracks,
        model_type = model_type,
        n_features = n_features,
        lambda_1_l2 = .1,
        lambda_2_l1 = .0,
        lambda_2_l2 = .1,
        lambda_3_l2 = .1,
        n_rand_init = 10,
        max_iter = 100,
        min_improvement = 0.001
    output:
        model_json = model_json
    threads:
        workflow.cores
    script:
        scripts_dir + "/run_training.py"